{"version":3,"sources":["App/toGeoJson.ts","App/setCluster.ts","App/distance-label.ts","App/Header.tsx","App/Shop.tsx","App/MapSearch.tsx","App/Map.tsx","App/Home.tsx","App/ShopListItem.tsx","App/List.tsx","geolocation.ts","App/Tabbar.tsx","api/index.ts","App/CircularIndeterminate.tsx","App/Form.tsx","App/Post.tsx","App.tsx","Qrcode.tsx","About.tsx","Container.tsx","index.tsx"],"names":["toGeoJson","data","geojson","type","features","id","item","feature","geometry","coordinates","Number","properties","_id","i","Object","keys","length","key","push","setCluster","map","addLayer","source","filter","paint","layout","on","e","queryRenderedFeatures","point","layers","clusterId","cluster_id","getSource","getClusterExpansionZoom","err","zoom","easeTo","center","getCanvas","style","cursor","makeDistanceLabelText","distance","distanceTipText","isNaN","Math","round","Content","className","props","mapNode","useRef","useState","setMap","shop","clickHandler","close","current","remove","useEffect","nextMap","window","geolonia","Map","container","interactive","text","categoryList","content","onClick","margin","JSON","parse","category","to","wordBreak","split","line","result","undefined","ref","width","height","marginTop","GOOGLE_MAP_API_KEY","CustomizedInputBase","changeLocationName","event","setPlace","target","value","geocode","Paper","component","sx","p","display","alignItems","IconButton","InputBase","ml","flex","placeholder","inputProps","onChange","onKeyPress","googleMapsApiKey","CSS","position","hidePoiLayers","hideLayers","layerId","setLayoutProperty","parseHash","url","qstr","location","hash","substring","URLSearchParams","React","mapObject","setMapObject","setShop","useZLatLngString","zLatLngString","setZLatLngString","addSource","cluster","clusterMaxZoom","clusterRadius","addMarkers","q","set","toString","replace","zlatlng","get","inputLat","setLat","inputLng","setLng","place","bounds","geojsonExtent","fitBoundsOptions","padding","lat","lng","flyTo","fitBounds","onMapLoad","getCenter","rawZoom","getZoom","precision","ceil","LN2","log","LN10","m","pow","zStr","orienteationchangeHandler","resize","addEventListener","removeEventListener","off","google","maps","Geocoder","address","results","status","address_components","some","long_name","alert","CustomizedSnackbars","lazy","ms","Promise","resolve","setTimeout","then","useLocation","showPin","Tooltip","title","placement","arrow","open","src","alt","fallback","search","includes","popupHandler","size","color","sortShopList","shopList","reject","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","error","enableHighAccuracy","timeout","maximumAge","currentPosition","from","turf","sortingShopList","parseFloat","units","sort","a","b","navigate","useNavigate","setData","list","setList","page","setPage","hasMore","setHasMore","setCategoryList","useSearchParams","queryCategory","categories","j","isMounted","sortedData","slice","loader","textAlign","top","htmlFor","options","label","dataLength","next","scrollableTarget","index","URL","getHeaders","getAccessToken","accessToken","Authorization","payload","client_id","client_secret","refresh_token","grant_type","axios","post","response","Error","access_token","postPreview","parameters","function","headers","create","instance","console","CircularIndeterminate","Box","justifyContent","CircularProgress","lon","timestamp","dayjs","format","spot","introduction","inputs","setInputs","handleChange","name","values","isLoading","setIsLoading","handleSubmit","setAddress","params","res","pname","prefecture","mname","municipality","section","local","Typography","variant","gutterBottom","mb","FormControl","fullWidth","LocalizationProvider","dateAdapter","AdapterDayjs","Stack","spacing","DateTimePicker","renderInput","TextField","InputLabel","Select","MenuItem","multiline","rows","Button","disabled","weather","trafficLight","item1","item2","Date","App","setShopList","fetch","process","getTime","ok","fetchedData","honhyoListFeatures","honhyo2019List","concat","honhyo2020List","honhyo2021List","hours","getHours","minutes","getMinutes","String","latDegrees","latMinutes","latSeconds","toFixed","lngDegrees","lngMinutes","lngSeconds","nextShopList","pattern","test","sortedShopList","path","element","Qrcode","Canvas","useQRCode","logoUrl","config","logo_image_url","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c86d5bbc.chunk.js","sourcesContent":["type Geometry = {\n  type: string;\n  coordinates: number[]\n}\n\ntype featureProperties = {\n  [key: string]: string;\n}\n\ntype Feature = {\n  type: string;\n  geometry: Geometry;\n  properties: featureProperties\n}\n\ntype itemObject = {\n  [key: string]: any;\n}\n\ntype GeoJSON = {\n  type: string;\n  features: Feature[]\n}\n\nconst toGeoJson = (data: any) => {\n  const geojson = {\n    type: \"FeatureCollection\",\n    features: []\n  } as GeoJSON\n\n  for (const id in data) {\n    const item = data[id] as itemObject\n\n    if (!item['経度'] || !item['緯度'] || !item['スポット名']) {\n      return;\n    }\n\n    const feature = {\n      type: \"Feature\",\n      geometry: {\n        type: \"Point\",\n        coordinates: [Number(item['経度']), Number(item['緯度'])]\n      },\n      properties: {_id: id}\n    } as Feature\n\n    for (let i = 0; i < Object.keys(item).length; i++) {\n      const key = Object.keys(item)[i]\n      feature.properties[key] = item[key]\n    }\n\n    geojson.features.push(feature)\n  }\n\n  return geojson\n}\n\nexport default toGeoJson;\n","const setCluster = (map: any) => {\n  map.addLayer({\n    id: 'clusters',\n    type: 'circle',\n    source: 'shops',\n    filter: ['has', 'point_count'],\n    paint: {\n      'circle-radius': 20,\n      'circle-color': '#FF0000',\n      'circle-opacity': 1.0,\n    },\n  })\n\n  map.addLayer({\n    id: 'cluster-count',\n    type: 'symbol',\n    source: 'shops',\n    filter: ['has', 'point_count'],\n    paint: {\n      'text-color': '#FFFFFF',\n    },\n    layout: {\n      'text-field': '{point_count_abbreviated} 件',\n      'text-size': 12,\n      'text-font': ['Noto Sans Regular'],\n    },\n  })\n\n  map.on('click', 'clusters', (e: any) => {\n    const features = map.queryRenderedFeatures(e.point, { layers: ['clusters'] })\n    const clusterId = features[0].properties.cluster_id\n    map.getSource('shops').getClusterExpansionZoom(clusterId, (err: any, zoom: number) => {\n      if (err)\n        return\n\n      map.easeTo({\n        center: features[0].geometry.coordinates,\n        zoom: zoom,\n      })\n    })\n  })\n\n  map.on('mouseenter', 'clusters', function () {\n    map.getCanvas().style.cursor = 'pointer'\n  })\n\n  map.on('mouseleave', 'clusters', function () {\n    map.getCanvas().style.cursor = ''\n  })\n}\n\nexport default setCluster;\n","export const makeDistanceLabelText = (distance: number | void) => {\n  let distanceTipText = \"\"\n  if(typeof distance === 'number' && !Number.isNaN(distance)) {\n    if(distance > 1000) {\n      distanceTipText = Math.round(distance / 1000) + ' km'\n    } else {\n      distanceTipText = Math.round(distance) + ' m'\n    }\n  }\n  return distanceTipText\n}\n","import './Header.scss'\n\nconst Content = () => {\n  return (\n    <div className=\"head\">\n      <p>通学路安全マップ</p>\n    </div>\n  )\n}\n\nexport default Content\n","import { useState, useEffect, useRef } from \"react\"\nimport './Shop.scss'\nimport { Link } from \"react-router-dom\";\nimport { makeDistanceLabelText } from \"./distance-label\";\nimport Header from \"./Header\";\n// import { postLike, postUnlike } from \"../api\"\n// import { CircularProgress } from \"@mui/material\"\n\ntype Props = {\n  shop: Pwamap.ShopData;\n  close: Function;\n}\n\nconst Content = (props: Props) => {\n  const mapNode = useRef<HTMLDivElement>(null)\n  const [map, setMap] = useState<any>(null)\n  // const [total, setTotal] = useState<number>(0)\n  // const [isLiked, setIsLiked] = useState(false)\n  // const [isLoading, setIsLoading] = useState(false)\n\n  const { shop } = props\n\n  const clickHandler = () => {\n    props.close()\n    if(mapNode.current) {\n      mapNode.current.remove()\n      map.remove()\n    }\n  }\n\n  useEffect(() => {\n    if (!mapNode.current) {\n      return\n    }\n\n    // @ts-ignore\n    const nextMap = new window.geolonia.Map({\n      container: mapNode.current,\n      interactive: false,\n      zoom: 14,\n      style: `geolonia/gsi`,\n    });\n    setMap(nextMap)\n\n    // setIsLiked(!!localStorage.getItem(`like:${shop['index']}`))\n  }, [shop, mapNode])\n\n  const distanceTipText = makeDistanceLabelText(shop.distance)\n  const categoryList = shop['カテゴリリスト']\n  const content = shop['紹介文']\n\n  const toBreakLine = (text: string) => {\n\n    return text.split(/(\\r\\n)|(\\n)|(\\r)/g).map((line, i) => {\n\n      let result: any = '';\n\n      if (line === '\\r\\n' || line === '\\n' || line === '\\r') {\n        result = <br key={i} />\n      } else if (line !== undefined) {\n        result = line\n      }\n\n      return result\n    })\n  }\n\n  // const onPostLike = async () => {\n  //   setIsLoading(true)\n  //   const res = await postLike({ index: shop['index'] })\n  //   setTotal(res)\n  //   localStorage.setItem(`like:${shop['index']}`, 'true')\n  //   setIsLiked(true)\n  //   setIsLoading(false)\n  // }\n\n  // const onPostUnlike = async () => {\n  //   setIsLoading(true)\n  //   const res = await postUnlike({ index: shop['index'] })\n  //   setTotal(res)\n  //   localStorage.removeItem(`like:${shop['index']}`)\n  //   setIsLiked(false)\n  //   setIsLoading(false)\n  // }\n\n  return (\n    <div className=\"shop-single\">\n      <Header />\n      <div className=\"shop-container\">\n        <div className=\"back\"><button onClick={clickHandler}>{'< 戻る'}</button></div>\n        {shop?\n          <>\n            <h2>交通事故詳細</h2>\n\n            <div style={{ margin: \"0 0 12px 0\" }}>\n              {\n                // @ts-ignore\n                JSON.parse([categoryList]).map((category, i) => {\n                  return (\n                    <span key={i} className=\"nowrap\">\n                      <Link to={`/list?category=${category}`}>\n                        <span onClick={clickHandler} className=\"category\">{category}</span>\n                      </Link>\n                    </span>\n                  )\n                })\n              }\n              <span className=\"nowrap\">{distanceTipText && <span className=\"distance\">現在位置から {distanceTipText}</span> }</span>\n            </div>\n\n            {/* {shop['いいね数'] === 0 || shop['いいね数'] > 0 ? <div style={{ display: 'flex' }}>\n              {isLoading ? <CircularProgress /> : <img src={isLiked ? 'thumb-up.png' : 'thumb-up-outline.png'} alt=\"いいね\" width='28px' className=\"like-button\" onClick={isLiked ? onPostUnlike : onPostLike} />}\n              <p style={{ margin: '2px' }}>{total || shop['いいね数']}</p>\n            </div> : <></>} */}\n\n            <p style={{margin: \"24px 0\", wordBreak: \"break-all\"}}>{toBreakLine(content)}</p>\n\n            <div\n              ref={mapNode}\n              style={{width: '100%', height: '200px', marginTop: \"24px\"}}\n              data-lat={shop['緯度']}\n              data-lng={shop['経度']}\n              data-navigation-control=\"off\"\n            ></div>\n          </>\n          :\n          <></>\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default Content;\n","import * as React from 'react'\nimport Paper from '@mui/material/Paper'\nimport InputBase from '@mui/material/InputBase'\nimport IconButton from '@mui/material/IconButton'\nimport { FaSearch } from 'react-icons/fa'\nimport { LoadScript } from '@react-google-maps/api'\n\nconst GOOGLE_MAP_API_KEY = process.env.REACT_APP_GOOGLE_MAP_API_KEY || ''\n\ntype Props = {\n  geocode: () => void\n  setPlace: React.Dispatch<React.SetStateAction<undefined>>\n}\n\nexport default function CustomizedInputBase(props: Props) {\n  const changeLocationName = (event: any) => {\n    if (event.key === 'Enter') {\n      props.geocode()\n      return\n    }\n    props.setPlace(event.target.value)\n  }\n  return (\n    <Paper\n      component=\"form\"\n      sx={{ p: '2px 4px', display: 'flex', alignItems: 'center' }}\n    >\n      <IconButton type=\"button\" sx={{ p: '10px' }} aria-label=\"search\">\n        <FaSearch />\n      </IconButton>\n      <InputBase\n        sx={{ ml: 1, flex: 1 }}\n        placeholder=\"住所や小学校名で検索\"\n        inputProps={{ 'aria-label': '住所で検索' }}\n        onChange={(event) => changeLocationName(event)}\n        onKeyPress={(event) => changeLocationName(event)}\n        style={{ height: '60px' }}\n      />\n      <LoadScript googleMapsApiKey={GOOGLE_MAP_API_KEY}>\n      </LoadScript>\n\n    </Paper>\n  )\n}\n","import React from \"react\";\n// @ts-ignore\nimport geojsonExtent from '@mapbox/geojson-extent'\nimport toGeoJson from './toGeoJson'\nimport setCluster from './setCluster'\nimport Shop from './Shop'\nimport Header from './Header'\nimport MapSearch from \"./MapSearch\"\nimport { useState } from 'react'\n// import schoolList from '../lib/suginami_202.json'\n// import { Chip } from \"@material-ui/core\"\n// import './Map.scss'\n\ntype Props = {\n  data: Pwamap.ShopData[];\n  useZLatLngString: [string, React.Dispatch<React.SetStateAction<string>>]\n};\n\nconst CSS: React.CSSProperties = {\n  width: '100%',\n  height: '100%',\n  position: 'relative',\n}\n\n\n// const schoolListFeatures = schoolList.data.map((school) => {\n//   return {\n//     name: school[\"\\uFEFF\\\"\\u540D\\u524D\\\"\"]\n//   }\n// })\n\n\nconst hidePoiLayers = (map: any) => {\n\n  const hideLayers = [\n    'poi',\n    'poi-primary',\n    'poi-r0-r9',\n    'poi-r10-r24',\n    'poi-r25',\n    'poi-bus',\n    'poi-entrance',\n  ]\n\n  for (let i = 0; i < hideLayers.length; i++) {\n    const layerId = hideLayers[i];\n    map.setLayoutProperty(layerId, 'visibility', 'none')\n  }\n}\n\nconst parseHash = (url?: Location | URL) => {\n  const qstr = (url || window.location).hash.substring(2);\n  const q = new URLSearchParams(qstr);\n  return q;\n};\n\nconst updateHash = (q: URLSearchParams) => {\n\n  const hash = q.toString();\n  if (hash) {\n    window.location.hash = `#/?${q.toString().replace(/%2F/g, '/')}`;\n  }\n};\n\nconst Content = (props: Props) => {\n  const mapNode = React.useRef<HTMLDivElement>(null);\n  const [mapObject, setMapObject] = React.useState<any>()\n  const [shop, setShop] = React.useState<Pwamap.ShopData | undefined>(undefined)\n  const [zLatLngString, setZLatLngString] = props.useZLatLngString\n  const addMarkers = (mapObject: any, data: any) => {\n\n    if (!mapObject || !data) {\n      return\n    }\n\n    mapObject.on('render', () => {\n\n      // nothing to do if shops exists.\n      if (mapObject.getSource('shops')) {\n        return\n      }\n\n      hidePoiLayers(mapObject)\n\n      const textColor = '#000000'\n      const textHaloColor = '#FFFFFF'\n\n      const geojson = toGeoJson(data)\n\n      mapObject.addSource('shops', {\n        type: 'geojson',\n        data: geojson,\n        cluster: true,\n        clusterMaxZoom: 14,\n        clusterRadius: 25,\n      })\n\n      mapObject.addLayer({\n        id: 'shop-points',\n        type: 'circle',\n        source: 'shops',\n        filter: ['all',\n          ['==', '$type', 'Point'],\n        ],\n        paint: {\n          'circle-radius': 13,\n          'circle-color': '#FF0000',\n          'circle-opacity': 0.4,\n          'circle-stroke-width': 2,\n          'circle-stroke-color': '#FFFFFF',\n          'circle-stroke-opacity': 1,\n        },\n      })\n\n      mapObject.addLayer({\n        id: 'shop-symbol',\n        type: 'symbol',\n        source: 'shops',\n        filter: ['all',\n          ['==', '$type', 'Point'],\n        ],\n        paint: {\n          'text-color': textColor,\n          'text-halo-color': textHaloColor,\n          'text-halo-width': 2,\n        },\n        layout: {\n          'text-field': \"{スポット名}\",\n          'text-font': ['Noto Sans Regular'],\n          'text-variable-anchor': ['top', 'bottom', 'left', 'right'],\n          'text-radial-offset': 0.5,\n          'text-justify': 'auto',\n          'text-size': 12,\n          'text-anchor': 'top',\n          'text-max-width': 12,\n          'text-allow-overlap': false,\n        },\n      })\n\n      mapObject.on('mouseenter', 'shop-points', () => {\n        mapObject.getCanvas().style.cursor = 'pointer'\n      })\n\n      mapObject.on('mouseleave', 'shop-points', () => {\n        mapObject.getCanvas().style.cursor = ''\n      })\n\n      mapObject.on('mouseenter', 'shop-symbol', () => {\n        mapObject.getCanvas().style.cursor = 'pointer'\n      })\n\n      mapObject.on('mouseleave', 'shop-symbol', () => {\n        mapObject.getCanvas().style.cursor = ''\n      })\n\n      mapObject.on('click', 'shop-points', (event: any) => {\n        if (!event.features[0].properties.cluster) {\n          setShop(event.features[0].properties)\n        }\n      })\n\n      mapObject.on('click', 'shop-symbol', (event: any) => {\n        if (!event.features[0].properties.cluster) {\n          setShop(event.features[0].properties)\n        }\n      })\n\n      setCluster(mapObject)\n    });\n\n  }\n\n  React.useEffect(() => {\n\n    addMarkers(mapObject, props.data)\n\n  }, [mapObject, props.data])\n\n  React.useEffect(() => {\n    const hash = parseHash();\n    if (zLatLngString) {\n      hash.set('map', zLatLngString);\n    }\n    updateHash(hash);\n\n  }, [ zLatLngString ]);\n\n  const hash = parseHash()\n  const latLngString = hash.get('map') || ''\n  const zlatlng = latLngString.split('/')\n  const [inputLat, setLat] = useState(zlatlng[1])\n  const [inputLng, setLng] = useState(zlatlng[2])\n  const [place, setPlace] = useState()\n\n  // @ts-ignore\n  const { geolonia } = window\n\n  const geojson = toGeoJson(props.data)\n  const bounds = geojsonExtent(geojson)\n\n  const geocode = () => {\n    const geocoder = new window.google.maps.Geocoder()\n    geocoder.geocode({ address: place }, (results, status) => {\n      if (status === 'OK' && results) {\n        const lat = results[0].geometry.location.lat().toString()\n        const lng = results[0].geometry.location.lng().toString()\n\n        if (!results[0].address_components.some((component: any) => {\n          return component.long_name === '杉並区' || component.long_name === 'Suginami City'\n        })) {\n          alert('対象エリアは、杉並区内のみとなります。')\n          return\n        }\n\n        setLat(lat)\n        setLng(lng)\n\n        const map = new geolonia.Map({\n          container: mapNode.current,\n          style: 'geolonia/gsi',\n          bounds: bounds,\n          fitBoundsOptions: { padding: 50 },\n        });\n\n        map.flyTo({ center: [lng, lat], zoom: 16 })\n      } else {\n        alert('結果が見つかりませんでした。\\n対象エリアは、杉並区内のみとなります')\n      }\n    })\n  }\n\n  React.useEffect(() => {\n    // Only once reder the map.\n    if (!mapNode.current || mapObject) {\n      return\n    }\n\n    const map = new geolonia.Map({\n      container: mapNode.current,\n      style: 'geolonia/gsi',\n      bounds: bounds,\n      fitBoundsOptions: { padding: 50 },\n    })\n\n    const hash = parseHash()\n    if (hash && hash.get('map')) {\n      const latLngString = hash.get('map') || ''\n      const zlatlng = latLngString.split('/')\n      const zoom = zlatlng[0]\n      const lat = zlatlng[1]\n      const lng = zlatlng[2]\n\n      map.flyTo({ center: [lng, lat], zoom });\n\n    } else if (bounds) {\n\n      map.fitBounds(bounds, { padding: 50 })\n\n    }\n\n    const onMapLoad = () => {\n      hidePoiLayers(map)\n      setMapObject(map)\n\n      map.on('moveend', () => {\n        // see: https://github.com/maplibre/maplibre-gl-js/blob/ba7bfbc846910c5ae848aaeebe4bde6833fc9cdc/src/ui/hash.js#L59\n        const center = map.getCenter(),\n          rawZoom = map.getZoom(),\n          zoom = Math.round(rawZoom * 100) / 100,\n          // derived from equation: 512px * 2^z / 360 / 10^d < 0.5px\n          precision = Math.ceil((zoom * Math.LN2 + Math.log(512 / 360 / 0.5)) / Math.LN10),\n          m = Math.pow(10, precision),\n          lng = Math.round(center.lng * m) / m,\n          lat = Math.round(center.lat * m) / m,\n          zStr = Math.ceil(zoom);\n\n        setZLatLngString(`${zStr}/${lat}/${lng}`);\n      });\n    }\n\n    const orienteationchangeHandler = () => {\n      map.resize()\n    }\n\n    // attach\n    map.on('load', onMapLoad)\n\n    window.addEventListener('orientationchange', orienteationchangeHandler)\n\n    return () => {\n      // detach to prevent memory leak\n      window.removeEventListener('orientationchange', orienteationchangeHandler)\n      map.off('load', onMapLoad)\n    }\n  })\n\n  const closeHandler = () => {\n    setShop(undefined)\n  }\n\n  return (\n    <div style={CSS}>\n      <Header />\n\n      <MapSearch geocode={geocode} setPlace={setPlace} />\n\n      {/* <div className=\"chip-wrapper\">\n        {\n          schoolListFeatures.map((school) => {\n            return (\n              <Chip label={school.name} />\n            )\n          })\n        }\n      </div> */}\n\n      <div\n        ref={mapNode}\n        style={CSS}\n        data-lat={inputLat}\n        data-lng={inputLng}\n        data-geolocate-control=\"on\"\n        data-marker=\"off\"\n      ></div>\n      {shop ?\n        <Shop shop={shop} close={closeHandler} />\n        :\n        <></>\n      }\n    </div>\n  );\n};\n\nexport default Content;\n","import Map from \"./Map\"\nimport './Home.scss'\nimport { Link, useLocation } from \"react-router-dom\"\nimport React, { lazy, Suspense } from \"react\"\nimport { Tooltip } from \"@material-ui/core\"\n\nconst sleep = (ms: number) => new Promise(resolve => setTimeout(resolve, ms))\n\nconst CustomizedSnackbars = lazy(() => sleep(1000).then(() => import('./Snackbars')));\n\ntype Props = {\n  data: Pwamap.ShopData[];\n}\n\nconst Content = (props: Props) => {\n  const location = useLocation();\n  const useZLatLngString = React.useState<string>('')\n  const [showPin] = React.useState<boolean>(false)\n  return (\n    <div className=\"home-container\">\n      <Link to={`/post?${useZLatLngString['0']}`}>\n        {showPin ? <Tooltip\n          className=\"center\"\n          title=\"この位置に要望を投稿\"\n          placement=\"top\"\n          arrow\n          open={true}\n        >\n          <div><img src='map-pin.png' alt=\"map pin\" className=\"map-pin\" /></div>\n        </Tooltip> : ''}\n      </Link>\n      <Map data={props.data} useZLatLngString={useZLatLngString} />\n      {/* マップ上にピンを立てるボタンを非表示 */}\n      {/* <button className=\"map-pin-button\" onClick={() => setShowPin(!showPin)}>\n        <img className=\"map-pin-button__plus-math\" src={`${showPin ? 'multiply' : 'plus-math'}.png`} alt=\"plus math\" />\n      </button> */}\n      <Suspense fallback=''>\n        {location.search.includes('success') ? <CustomizedSnackbars /> : ''}\n      </Suspense>\n    </div>\n  );\n};\n\nexport default Content;\n","import { BsChevronCompactRight } from 'react-icons/bs'\nimport './ShopListItem.scss'\nimport { Link } from \"react-router-dom\";\nimport { makeDistanceLabelText } from \"./distance-label\";\n\ntype Props = {\n  data: Pwamap.ShopData;\n  popupHandler: Function\n};\n\nconst Content = (props: Props) => {\n  const clickHandler = () => {\n    props.popupHandler(props.data)\n  }\n\n  const distanceTipText = makeDistanceLabelText(props.data.distance)\n  const categoryList = props.data['カテゴリリスト']\n\n\n  return (\n    <>\n      <div className=\"shop-link\">\n        <h2 className=\"shop-title\" style={{ wordBreak: \"break-all\" }} onClick={clickHandler}>{props.data['スポット名']}</h2>\n        <div className='tag-box'>\n\n          {\n            categoryList.map((category, i) => {\n              return (\n                <span className=\"nowrap\" key={i}>\n                  <Link to={`/list?category=${category}`}>\n                    <span className=\"category\">{category}</span>\n                  </Link>\n                </span>\n              )\n            })\n          }\n          <span className=\"nowrap\">{distanceTipText && <span className=\"distance\">現在位置から {distanceTipText}</span>}</span>\n        </div>\n\n        <div style={{ margin: \"10px 10px 10px 0\" }}>\n\n        </div>\n\n        <div className=\"right\" onClick={clickHandler}><BsChevronCompactRight size=\"40px\" color=\"#CCCCCC\" /></div>\n      </div>\n    </>\n  );\n};\n\nexport default Content;\n","import React from \"react\";\nimport ShopListItem from './ShopListItem'\nimport Shop from './Shop'\nimport './List.scss'\nimport { useSearchParams } from \"react-router-dom\";\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { askGeolocationPermission } from '../geolocation'\nimport * as turf from \"@turf/turf\"\nimport Select from 'react-select'\nimport { useNavigate } from 'react-router-dom';\nimport Header from './Header'\n\ntype Props = {\n  data: Pwamap.ShopData[];\n}\n\nconst sortShopList = async (shopList: Pwamap.ShopData[]) => {\n  const currentPosition = await askGeolocationPermission()\n  if(currentPosition) {\n    const from = turf.point(currentPosition);\n    const sortingShopList = shopList.map((shop) => {\n      const lng = parseFloat(shop['経度'])\n      const lat = parseFloat(shop['緯度'])\n      if(Number.isNaN(lng) || Number.isNaN(lat)) {\n        return shop\n      } else {\n        const to = turf.point([lng, lat])\n        const distance = turf.distance(from, to, {units: 'meters' as 'meters'});\n        return { ...shop, distance }\n      }\n    })\n    sortingShopList.sort((a,b) => {\n      if(typeof a.distance !== 'number' || Number.isNaN(a.distance)) {\n        return 1\n      } else if (typeof b.distance !== 'number' || Number.isNaN(b.distance)) {\n        return -1\n      } else {\n        return a.distance - b.distance\n      }\n    })\n    return sortingShopList\n  } else {\n    return shopList\n  }\n}\n\nconst Content = (props: Props) => {\n  const navigate = useNavigate();\n\n  const [shop, setShop] = React.useState<Pwamap.ShopData | undefined>()\n  const [data, setData] = React.useState<Pwamap.ShopData[]>(props.data)\n  const [list, setList] = React.useState<any[]>([]);\n  const [page, setPage] = React.useState(10);\n  const [hasMore, setHasMore] = React.useState(true);\n  const [categoryList, setCategoryList] = React.useState<string[]>([]);\n\n\n  const [searchParams] = useSearchParams();\n  const queryCategory = searchParams.get('category')\n\n  React.useEffect(() => {\n\n    let categories: string[] = []\n\n    for (let i = 0;i < props.data.length;i++) {\n      const shop = props.data[i]\n      const categoryList = shop['カテゴリリスト']\n      for (let j = 0;j < categoryList.length;j++) {\n        const category = categoryList[j]\n        if (!categories.includes(category)) {\n          categories.push(category)\n        }\n      }\n    }\n\n    setCategoryList(categories)\n\n\n    let data = props.data;\n\n    if (queryCategory) {\n      data = props.data.filter((shop) => {\n        return categories && categories.includes(queryCategory)\n      })\n    }\n\n    let isMounted = true\n    // prevent memory leak\n    if (isMounted) {\n\n      const orderBy = process.env.REACT_APP_ORDERBY\n\n      if (orderBy === 'distance') {\n\n        sortShopList(data)\n          .then(sortedData => {\n            // prevent memory leak\n            if (isMounted) {\n              setList(sortedData.slice(0, page))\n              setData(sortedData)\n            }\n          })\n\n      } else {\n        setList(data.slice(0, page))\n        setData(data)\n      }\n    }\n\n    return () => {\n      isMounted = false\n    }\n  }, [props.data, queryCategory, page])\n\n\n  const popupHandler = (shop: Pwamap.ShopData) => {\n    if (shop) {\n      setShop(shop)\n    }\n  }\n\n  const closeHandler = () => {\n    setShop(undefined)\n  }\n\n    //項目を読み込むときのコールバック\n    const loadMore = () => {\n\n      //データ件数が0件の場合、処理終了\n      if (list.length >= data.length) {\n        setHasMore(false);\n        return;\n      }\n\n      setList([...list, ...data.slice(page, page + 10)])\n      setPage(page + 10)\n    }\n\n  const loader = <div\n    className=\"loader\"\n    key={0}\n    style={{\n      width: '100%',\n      height: '200px',\n      textAlign: 'center',\n      position: 'relative',\n      top: '100px'\n    }}\n  >場所一覧を読み込み中です...</div>;\n\n  return (\n    <div id=\"shop-list\" className=\"shop-list\">\n      <Header />\n      <div className=\"category-item\">\n        <div className=\"category-container\">\n          <label htmlFor=\"category-select\">カテゴリリストから選ぶ</label>\n          <Select\n            onChange={(e) => {\n              if (e) {\n                navigate(`/list?category=${e.value}`)\n              }\n            }}\n            options={\n              categoryList.map(category => {\n                return {\n                  value: category,\n                  label: category\n                }\n              })\n            }\n          />\n        </div>\n      </div>\n      <InfiniteScroll\n        dataLength={list.length}\n        next={loadMore}\n        hasMore={hasMore}\n        loader={loader}\n        scrollableTarget=\"shop-list\"\n      >\n        {\n          list.map((item, index) => {\n            return (<div key={index} className=\"shop\">\n              <ShopListItem\n                data={item}\n                popupHandler={popupHandler}\n              />\n            </div>)\n\n          })\n        }\n      </InfiniteScroll>\n      {shop ?\n        <Shop shop={shop} close={closeHandler} />\n        :\n        <></>\n      }\n    </div>\n  );\n};\n\nexport default Content;\n","export const askGeolocationPermission = () => {\n  return new Promise<Pwamap.LngLat | null>((resolve, reject) => {\n\n    if(!window.navigator.geolocation || !window.navigator.geolocation.getCurrentPosition) {\n      resolve(null)\n    }\n\n    window.navigator.geolocation.getCurrentPosition(\n      (pos) => {\n        const lat = pos.coords.latitude\n        const lng = pos.coords.longitude\n        resolve([lng, lat])\n      },\n      (error) => {\n        resolve(null)\n      },\n      {\n        enableHighAccuracy: true,\n        timeout: 5000,\n        maximumAge: 0\n      }\n    )\n  })\n}\n","import { Link } from \"react-router-dom\";\nimport './Tabbar.scss'\n\nimport { FaList, FaHome } from \"react-icons/fa\"\n\nconst Content = () => {\n  return (\n    <div className=\"tabbar\">\n      <ul>\n        <li><Link to=\"/\"><div className=\"icon\"><FaHome /></div><div className=\"text\">ホーム</div></Link></li>\n        <li><Link to=\"/list\"><div className=\"icon\"><FaList /></div><div className=\"text\">一覧</div></Link></li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Content;\n","import axios from \"axios\"\nimport { NavigateFunction } from \"react-router-dom\"\n\nconst CLIENT_ID = '430416577043-vaudgfur0pdk5qqc1bmrfchuuf5cgkcv.apps.googleusercontent.com'\nconst CLIENT_SECRET = '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'\nconst REFRESH_TOKEN = '1//0ejQEdwBJDx_uCgYIARAAGA4SNwF-L9Irw8w44X-7S4kYaW84_Ra2ae7t8f0KdwmOsVUB9QjOCpJZWxaPaIp7bsfkio69JR0ebFA'\nconst SCRIPT_ID = 'AKfycbwnv-EH1C95J6wSjfRpV28c3D-WE80NR2KVD-edX7zJauR0AYVZN95wXZfNxOsopZWq'\nconst TOKEN_URL = 'https://oauth2.googleapis.com/token'\n\nconst URL = `https://script.googleapis.com/v1/scripts/${SCRIPT_ID}:run`\n\nconst getHeaders = async () => {\n  const accessToken = await getAccessToken()\n  return {\n    Authorization: `Bearer ${accessToken}`,\n  }\n}\n\n/**\n * アクセストークンを取得する関数\n * @return string\n */\nconst getAccessToken = async () => {\n  const payload = {\n    client_id: CLIENT_ID,\n    client_secret: CLIENT_SECRET,\n    refresh_token: REFRESH_TOKEN,\n    grant_type: 'refresh_token',\n  }\n  // リクエスト\n  const response = await axios.post(TOKEN_URL, payload)\n  if (response.status !== 200 || !response.data) {\n    throw new Error('Failed to get access token.')\n  }\n  const accessToken = response.data.access_token\n  return accessToken\n}\n\n/**\n * @return string\n */\nexport const postPreview = async (parameters: any, navigate: NavigateFunction) => {\n  try {\n    const payload = {\n      function: 'postUserPost',\n      parameters,\n    }\n    const headers = await getHeaders()\n    const instance = await axios.create({ headers })\n    const response = await instance.post(URL, payload) as any\n    if (response.data.response['@type'].includes('error')) {\n      throw new Error()\n    } else {\n      navigate('/?success')\n    }\n  } catch (e) {\n    console.error(e)\n    throw e\n  }\n}\n\nexport const getSafetyData = async () => {\n  try {\n    const payload = {\n      function: 'getSafetyData',\n    }\n    const headers = await getHeaders()\n    const instance = await axios.create({ headers })\n    const response = await instance.post(URL, payload) as any\n    if (response.data.response['@type'].includes('error')) {\n      throw new Error()\n    } else {\n      return response.data.response.result\n    }\n  } catch (e) {\n    console.error(e)\n    throw e\n  }\n}\n\nexport const postLike = async (parameters: any) => {\n  try {\n    const payload = {\n      function: 'postLike',\n      parameters,\n    }\n    const headers = await getHeaders()\n    const instance = await axios.create({ headers })\n    const response = await instance.post(URL, payload) as any\n    if (response.data.response['@type'].includes('error')) {\n      throw new Error()\n    } else {\n      return response.data.response.result\n    }\n  } catch (e) {\n    console.error(e)\n    throw e\n  }\n}\n\nexport const postUnlike = async (parameters: any) => {\n  try {\n    const payload = {\n      function: 'postUnlike',\n      parameters,\n    }\n    const headers = await getHeaders()\n    const instance = await axios.create({ headers })\n    const response = await instance.post(URL, payload) as any\n    if (response.data.response['@type'].includes('error')) {\n      throw new Error()\n    } else {\n      return response.data.response.result\n    }\n  } catch (e) {\n    console.error(e)\n    throw e\n  }\n}\n","import * as React from 'react'\nimport CircularProgress from '@mui/material/CircularProgress'\nimport Box from '@mui/material/Box'\n\nexport default function CircularIndeterminate() {\n  return (\n    <Box sx={{ display: 'flex', justifyContent: 'center' }}>\n      <CircularProgress />\n    </Box>\n  )\n}\n","import { useEffect, useState } from 'react'\nimport axios from \"axios\"\nimport Header from './Header'\nimport { postPreview } from '../api'\nimport { Button, FormControl, InputLabel, MenuItem, Select, Typography } from '@material-ui/core'\nimport { LocalizationProvider } from '@mui/x-date-pickers'\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs'\nimport TextField from '@mui/material/TextField'\nimport Stack from '@mui/material/Stack'\nimport { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker'\nimport dayjs from 'dayjs'\nimport CircularIndeterminate from './CircularIndeterminate'\nimport { useNavigate } from \"react-router-dom\";\nimport './Form.scss'\n\ntype Input = {\n  title: string\n  category: string\n  latitude: string\n  longitude: string\n  timestamp: string\n  spot: string\n  introduction: string\n}\n\nconst zlatlng = window.location.hash.split('/')\nconst lat = zlatlng[2]\nconst lon = zlatlng[3]\n\nconst Content = () => {\n  const [inputs, setInputs] = useState<Input>({\n    title: '',\n    category: '住民要望',\n    latitude: lat,\n    longitude: lon,\n    timestamp: dayjs().format('YYYY-MM-DDTHH:mm:ss'),\n    spot: '',\n    introduction: '',\n  })\n\n  const handleChange = (e: any) => {\n    const name = e.target?.name\n    const value = name ? e.target?.value : dayjs(e).format('YYYY-MM-DDTHH:mm:ss')\n    setInputs(values => ({ ...values, [name || 'timestamp']: value }))\n  }\n\n  const [isLoading, setIsLoading] = useState(false)\n  const navigate = useNavigate();\n\n  const handleSubmit = async () => {\n    setIsLoading(true)\n    await postPreview(inputs, navigate)\n    setIsLoading(false)\n  }\n\n  const [address, setAddress] = useState(\"\")\n\n  useEffect(() => {\n    (async () => {\n      const zlatlng = window.location.hash.split('/')\n      const lat = zlatlng[2]\n      const lon = zlatlng[3]\n      if (lat && lon) {\n        const res = await axios.get(\n          \"https://aginfo.cgk.affrc.go.jp/ws/rgeocode.php?json\",\n          {\n            params: {\n              lat,\n              lon\n            }\n          }\n        )\n        const { result } = res.data\n        const { prefecture: { pname }, municipality: { mname } } = result\n        const { section } = result.local[0]\n\n        setAddress(pname + mname + section)\n      }\n    })()\n  })\n\n\n  return (\n    <>\n      <Header />\n\n      <div className='form-container'>\n        <Typography variant=\"h5\" gutterBottom margin=\"normal\">\n          要望を投稿\n        </Typography>\n\n        <Typography variant=\"h6\" gutterBottom sx={{ mb: 2 }}>\n          {address ? address + ' 付近' : ''}\n        </Typography>\n\n        <FormControl fullWidth>\n          <LocalizationProvider dateAdapter={AdapterDayjs}>\n            <Stack spacing={3} sx={{ mb: 2 }}>\n              <DateTimePicker\n                renderInput={(params) => <TextField {...params} />}\n                label=\"日時\"\n                value={inputs.timestamp}\n                onChange={handleChange}\n              />\n            </Stack>\n          </LocalizationProvider>\n\n          <FormControl fullWidth>\n            <InputLabel>スポット</InputLabel>\n            <Select\n            name=\"spot\"\n            value={inputs.spot}\n              onChange={handleChange}\n              sx={{ mb: 2 }}\n          >\n            <MenuItem value=\"車両交通量\">車両交通量</MenuItem>\n            <MenuItem value=\"道幅\">道幅</MenuItem>\n            <MenuItem value=\"歩道\">歩道</MenuItem>\n            <MenuItem value=\"横断歩道\">横断歩道</MenuItem>\n              <MenuItem value=\"立哨・見守り\">立哨・見守り</MenuItem>\n            <MenuItem value=\"カーブミラー\">カーブミラー</MenuItem>\n            <MenuItem value=\"信号機\">信号機</MenuItem>\n            <MenuItem value=\"見通し\">見通し</MenuItem>\n            </Select>\n          </FormControl>\n\n          <TextField\n            label=\"内容\"\n            name=\"introduction\"\n            multiline\n            rows={4}\n            value={inputs.introduction}\n            onChange={handleChange}\n            sx={{ mb: 2 }}\n          />\n        </FormControl>\n\n        <Button variant=\"contained\" onClick={handleSubmit} disabled={isLoading} fullWidth sx={{ margin: '24px 0' }}>\n          投稿\n        </Button>\n\n        {isLoading && <CircularIndeterminate />}\n      </div>\n    </>\n  )\n}\n\nexport default Content\n","import './Post.scss'\nimport Form from './Form'\n\nconst Content = () => {\n\n\n  return (\n    <>\n      <Form />\n    </>\n  )\n}\n\nexport default Content\n","import { useState, useEffect } from \"react\"\nimport { Routes, Route } from \"react-router-dom\";\nimport \"./App.scss\";\n\nimport Home from './App/Home'\nimport List from './App/List'\nimport Tabbar from './App/Tabbar'\nimport Post from './App/Post'\nimport honhyo2019List from './lib/honhyo_2019.json'\nimport honhyo2020List from './lib/honhyo_2020.json'\nimport honhyo2021List from './lib/honhyo_2021.json'\n\nconst weather = (item: string) => {\n  switch (item) {\n    case '1':\n      return '晴'\n    case '2':\n      return '曇'\n    case '3':\n      return '雨'\n    case '4':\n      return '雪'\n    default:\n      return ''\n  }\n}\n\nconst trafficLight = (item: string) => {\n  switch (item) {\n    case '1':\n      return '点灯'\n    case '8':\n      return '点灯'\n    case '2':\n      return '点灯'\n    case '3':\n      return '点滅'\n    case '4':\n      return '点滅'\n    case '5':\n      return '消灯'\n    case '6':\n      return '故障'\n    default:\n      return '設置なし'\n  }\n}\n\nconst municipality = (item: string) => {\n  switch (item) {\n    case '115':\n      return '杉並区'\n    default:\n      return ''\n  }\n}\n\n\nconst sortShopList = async (shopList: Pwamap.ShopData[]) => {\n\n  // 新着順にソート\n  return shopList.sort(function(item1, item2) {\n    return Date.parse(item2['タイムスタンプ']) - Date.parse(item1['タイムスタンプ'])\n  })\n\n}\n\nconst App = () => {\n  const [shopList, setShopList] = useState<Pwamap.ShopData[]>([])\n  const [isLoading, setIsLoading] = useState<boolean>(true)\n\n  useEffect(() => {\n    fetch(`${process.env.PUBLIC_URL}/data.json?timestamp=${new Date().getTime()}`)\n      .then((response) => {\n        return response.ok ? response.text() : Promise.reject(response.status)\n      })\n      .then((fetchedData) => {\n\n        const data = JSON.parse(fetchedData)\n\n        if ('values' in data === false) {\n          console.log(\"No Data Found at Spreadsheet\")\n          setShopList([])\n          return\n        }\n\n        (async () => {\n\n          const honhyoListFeatures = honhyo2019List.data.concat(honhyo2020List.data).concat(honhyo2021List.data).filter((item) => {\n            const timestamp = new Date(item['発生日時　　年'] + '/' + item['発生日時　　月'] + '/' + item['発生日時　　日'] + ' ' + item['発生日時　　時'] + ':' + item['発生日時　　分'])\n            const hours = timestamp.getHours()\n            const minutes = timestamp.getMinutes()\n\n            const isWithinMorningRange = (hours === 7 && minutes >= 30) || (hours === 8 && minutes < 30)\n            const isWithinAfternoonRange = (hours >= 14 && hours < 18)\n\n            if (isWithinMorningRange || isWithinAfternoonRange) {\n              return item['曜日(発生年月日)'] !== '土' && item['曜日(発生年月日)'] !== '日' && item['祝日(発生年月日)'] !== '1'\n            } else {\n              return false\n            }\n          }).map((item) => {\n            const lat = () => {\n              const lat = String(Number(item['地点　緯度（北緯）']) / 1000)\n              const latDegrees = lat.slice(0, 2)\n              const latMinutes = lat.slice(2, 4)\n              const latSeconds = lat.slice(4)\n              return (Number(latDegrees) + (Number(latMinutes) / 60) + (Number(latSeconds) / 60 / 60)).toFixed(7)\n            }\n\n            const lng = () => {\n              const lng = String(Number(item['地点　経度（東経）']) / 1000)\n              const lngDegrees = lng.slice(0, 3)\n              const lngMinutes = lng.slice(3, 5)\n              const lngSeconds = lng.slice(5)\n              return (Number(lngDegrees) + (Number(lngMinutes) / 60) + (Number(lngSeconds) / 60 / 60)).toFixed(7)\n            }\n\n            const timestamp = () => {\n              return item['発生日時　　年'] + '/' + item['発生日時　　月'] + '/' + item['発生日時　　日'] + ' ' + item['発生日時　　時'] + ':' + item['発生日時　　分']\n            }\n            return {\n              'スポット名': ' ',\n              '緯度': lat(),\n              '経度': lng(),\n              'タイムスタンプ': timestamp(),\n              'カテゴリリスト': [municipality(item['市区町村コード']), '信号機: ' + trafficLight(item['信号機']), '天気: ' + weather(item['天候'])],\n              '紹介文': '',\n              'いいね数': 0,\n            }\n          })\n\n\n          setIsLoading(false)\n          if (honhyoListFeatures.length) {\n            const nextShopList: Pwamap.ShopData[] = []\n            for (let i = 0;i < honhyoListFeatures.length;i++) {\n              const feature = honhyoListFeatures[i]\n              if (!feature['緯度'] || !feature['経度'] || !feature['スポット名']) {\n                continue\n              }\n\n              const pattern = /^-?[0-9]+(\\.[0-9]+)?$/\n\n              if (!pattern.test(feature['緯度'])) {\n                console.log('緯度が不正です')\n                continue\n              }\n              if (!pattern.test(feature['経度'])) {\n                console.log('経度が不正です')\n                continue\n              }\n\n              const shop = {\n                ...feature,\n                index: i\n              }\n\n              nextShopList.push(shop)\n\n              sortShopList(nextShopList).then((sortedShopList) => {\n                setShopList(sortedShopList)\n              })\n            }\n          }\n        })()\n      });\n  }, [])\n\n  return (\n    <>\n      {!isLoading ? <div className=\"app\">\n        <div className=\"app-body\">\n          <Routes>\n            <Route path=\"/\" element={<Home data={shopList} />} />\n            <Route path=\"/post\" element={<Post />} />\n            <Route path=\"/list\" element={<List data={shopList} />} />\n          </Routes>\n        </div>\n        <div className=\"app-footer\">\n          <Tabbar />\n        </div>\n      </div> : ''}\n    </>\n  );\n}\n\nexport default App;\n","import { useQRCode } from 'next-qrcode';\n\nfunction Qrcode(props: { url: string }) {\n\n  const { url } = props;\n  const { Canvas } = useQRCode();\n\n  return (\n    <Canvas\n      text={url}\n      options={{\n        type: 'image/png',\n        margin: 0,\n        width: 128\n      }}\n    />\n  );\n}\n\nexport default Qrcode;\n","import './About.scss'\nimport Qrcode from './Qrcode'\nimport config from './config.json'\n\nconst Content = () => {\n\n  const logoUrl = config.logo_image_url || `${process.env.PUBLIC_URL}/logo.svg`\n\n  return (\n    <div className=\"about\">\n      <div className=\"branding\">\n        <img className=\"image\" src={logoUrl} alt=\"\"/>\n      </div>\n\n      <div className=\"title\">{config.title}</div>\n      <div className=\"description\">スマホで確認ができます 👇</div>\n      <div className=\"qrcode\"><Qrcode url={window.location.href} /></div>\n    </div>\n  );\n};\n\nexport default Content;\n","import App from './App'\nimport About from './About'\nimport './Container.scss'\n\nfunction Content() {\n  return (\n    <div className=\"outer-container\">\n      <div className=\"inner-container\">\n        <About />\n        <App />\n      </div>\n    </div>\n  );\n}\n\nexport default Content;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from \"react-router-dom\";\nimport Container from './Container';\nimport './index.scss'\n// import * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Container />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n// serviceWorkerRegistration.register();\n"],"sourceRoot":""}