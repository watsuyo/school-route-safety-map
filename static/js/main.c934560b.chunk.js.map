{"version":3,"sources":["App/toGeoJson.ts","App/setCluster.ts","App/Links.tsx","App/distance-label.ts","App/Header.tsx","App/Shop.tsx","App/Map.tsx","App/Home.tsx","App/ShopListItem.tsx","App/List.tsx","geolocation.ts","App/Tabbar.tsx","lib/zen2han.ts","lib/table2json.ts","App/Form.tsx","App/Post.tsx","App.tsx","Qrcode.tsx","About.tsx","Container.tsx","serviceWorkerRegistration.ts","index.tsx"],"names":["toGeoJson","data","geojson","type","features","id","item","feature","geometry","coordinates","Number","properties","_id","i","Object","keys","length","key","push","setCluster","map","addLayer","source","filter","paint","layout","on","e","queryRenderedFeatures","point","layers","clusterId","cluster_id","getSource","getClusterExpansionZoom","err","zoom","easeTo","center","getCanvas","style","cursor","noop","stopPropagation","Content","props","className","href","onClick","size","makeDistanceLabelText","distance","distanceTipText","isNaN","Math","round","mapNode","React","useRef","useState","setMap","shop","clickHandler","close","current","remove","useEffect","nextMap","window","geolonia","Map","container","interactive","text","category","content","to","margin","src","alt","width","wordBreak","split","line","result","undefined","ref","height","marginTop","CSS","position","hidePoiLayers","hideLayers","layerId","setLayoutProperty","parseHash","url","qstr","location","hash","substring","URLSearchParams","mapObject","setMapObject","setShop","zLatLngString","setZLatLngString","addSource","cluster","clusterMaxZoom","clusterRadius","event","addMarkers","q","set","toString","replace","bounds","geojsonExtent","fitBoundsOptions","padding","get","zlatlng","lat","lng","flyTo","fitBounds","onMapLoad","getCenter","rawZoom","getZoom","precision","ceil","LN2","log","LN10","m","pow","zStr","orienteationchangeHandler","resize","addEventListener","removeEventListener","off","popupHandler","image","color","sortShopList","shopList","a","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","error","enableHighAccuracy","timeout","maximumAge","currentPosition","from","turf","sortingShopList","parseFloat","units","sort","b","navigate","useNavigate","setData","list","setList","page","setPage","hasMore","setHasMore","categoryList","setCategoryList","useSearchParams","queryCategory","categories","indexOf","isMounted","then","sortedData","slice","loader","textAlign","top","htmlFor","onChange","value","options","label","dataLength","next","scrollableTarget","index","zen2han","str","s","String","fromCharCode","charCodeAt","table2json","table","header","record","reduce","prev","column","main","sub","zipcode","setZipcodeMain","title","address","postcode","date","time","inputs","setInputs","showResult","setShowResult","updateZipcodeSub","target","axios","params","res","results","values","alert","handleChange","name","handleSubmit","item1","item2","Date","parse","App","setShopList","fetch","process","getTime","response","ok","status","fetchedData","JSON","console","nextShopList","match","sortedShopList","path","element","Home","Qrcode","Canvas","useQRCode","logoUrl","config","logo_image_url","isLocalhost","Boolean","hostname","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","origin","headers","contentType","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.c934560b.chunk.js","sourcesContent":["type Geometry = {\n  type: string;\n  coordinates: number[]\n}\n\ntype featureProperties = {\n  [key: string]: string;\n}\n\ntype Feature = {\n  type: string;\n  geometry: Geometry;\n  properties: featureProperties\n}\n\ntype itemObject = {\n  [key: string]: any;\n}\n\ntype GeoJSON = {\n  type: string;\n  features: Feature[]\n}\n\nconst toGeoJson = (data: any) => {\n  const geojson = {\n    type: \"FeatureCollection\",\n    features: []\n  } as GeoJSON\n\n  for (const id in data) {\n    const item = data[id] as itemObject\n\n    if (!item['経度'] || !item['緯度'] || !item['スポット名']) {\n      return;\n    }\n\n    const feature = {\n      type: \"Feature\",\n      geometry: {\n        type: \"Point\",\n        coordinates: [Number(item['経度']), Number(item['緯度'])]\n      },\n      properties: {_id: id}\n    } as Feature\n\n    for (let i = 0; i < Object.keys(item).length; i++) {\n      const key = Object.keys(item)[i]\n      feature.properties[key] = item[key]\n    }\n\n    geojson.features.push(feature)\n  }\n\n  return geojson\n}\n\nexport default toGeoJson;\n","const setCluster = (map: any) => {\n  map.addLayer({\n    id: 'clusters',\n    type: 'circle',\n    source: 'shops',\n    filter: ['has', 'point_count'],\n    paint: {\n      'circle-radius': 20,\n      'circle-color': '#FF0000',\n      'circle-opacity': 1.0,\n    },\n  })\n\n  map.addLayer({\n    id: 'cluster-count',\n    type: 'symbol',\n    source: 'shops',\n    filter: ['has', 'point_count'],\n    paint: {\n      'text-color': '#FFFFFF',\n    },\n    layout: {\n      'text-field': '{point_count_abbreviated} 件',\n      'text-size': 12,\n      'text-font': ['Noto Sans Regular'],\n    },\n  })\n\n  map.on('click', 'clusters', (e: any) => {\n    const features = map.queryRenderedFeatures(e.point, { layers: ['clusters'] })\n    const clusterId = features[0].properties.cluster_id\n    map.getSource('shops').getClusterExpansionZoom(clusterId, (err: any, zoom: number) => {\n      if (err)\n        return\n\n      map.easeTo({\n        center: features[0].geometry.coordinates,\n        zoom: zoom,\n      })\n    })\n  })\n\n  map.on('mouseenter', 'clusters', function () {\n    map.getCanvas().style.cursor = 'pointer'\n  })\n\n  map.on('mouseleave', 'clusters', function () {\n    map.getCanvas().style.cursor = ''\n  })\n}\n\nexport default setCluster;\n","import React from \"react\";\nimport { FaTwitter, FaInstagram, FaHome } from 'react-icons/fa';\n\nimport './Links.scss'\n\ntype Props = {\n  data: Pwamap.ShopData;\n};\n\nconst noop = (e: React.MouseEvent) => {\n  e.stopPropagation()\n}\n\nconst Content = (props: Props) => {\n\n  return (\n    <div className=\"links\">\n      {props.data['Instagram']?<div className=\"link\"><a href={`https://instagram.com/${props.data['Instagram']}`}><FaInstagram onClick={noop} size=\"20px\" /></a></div>:''}\n      {props.data['Twitter']?<div className=\"link\"><a href={`https://twitter.com/${props.data['Twitter']}`}><FaTwitter onClick={noop} size=\"20px\" /></a></div>:''}\n      {props.data['公式サイト']?<div className=\"link\"><a href={props.data['公式サイト']}><FaHome onClick={noop} size=\"20px\" /></a></div>:''}\n    </div>\n  );\n};\n\nexport default Content;\n","export const makeDistanceLabelText = (distance: number | void) => {\n  let distanceTipText = \"\"\n  if(typeof distance === 'number' && !Number.isNaN(distance)) {\n    if(distance > 1000) {\n      distanceTipText = Math.round(distance / 1000) + ' km'\n    } else {\n      distanceTipText = Math.round(distance) + ' m'\n    }\n  }\n  return distanceTipText\n}\n","import './Header.scss'\n\nconst Content = () => {\n  return (\n    <div className=\"head\">\n      <p>通学路安全マップ</p>\n      {/* <button ><AiOutlineClose size=\"16px\" color=\"#FFFFFF\" /> 閉じる</button> */}\n    </div>\n  )\n}\n\nexport default Content\n","import React from \"react\";\nimport Links from './Links'\nimport './Shop.scss'\nimport { Link } from \"react-router-dom\";\nimport { makeDistanceLabelText } from \"./distance-label\";\nimport Header from \"./Header\";\n\ntype Props = {\n  shop: Pwamap.ShopData;\n  close: Function;\n}\n\nconst Content = (props: Props) => {\n  const mapNode = React.useRef<HTMLDivElement>(null);\n  const [map, setMap] = React.useState<any>(null)\n  const { shop } = props\n\n  const clickHandler = () => {\n    props.close()\n    if(mapNode.current) {\n      mapNode.current.remove()\n      map.remove()\n    }\n  }\n\n  React.useEffect(() => {\n    if (!mapNode.current) {\n      return\n    }\n\n    // @ts-ignore\n    const nextMap = new window.geolonia.Map({\n      container: mapNode.current,\n      interactive: false,\n      zoom: 14,\n      style: `geolonia/gsi`,\n    });\n    setMap(nextMap)\n  }, [shop, mapNode])\n\n  const distanceTipText = makeDistanceLabelText(shop.distance)\n  const category = shop['カテゴリ']\n  const content = shop['紹介文']\n\n  const toBreakLine = (text: string) => {\n\n    return text.split(/(\\r\\n)|(\\n)|(\\r)/g).map((line, i) => {\n\n      let result: any = '';\n\n      if (line === '\\r\\n' || line === '\\n' || line === '\\r') {\n        result = <br key={i} />\n      } else if (line !== undefined) {\n        result = line\n      }\n\n      return result\n    })\n  }\n\n  return (\n    <div className=\"shop-single\">\n      <Header />\n      <div className=\"container\">\n        <div className=\"back\"><button onClick={clickHandler}>{'< 戻る'}</button></div>\n        {shop?\n          <>\n            <h2>{shop['スポット名']}</h2>\n            <div>\n              <span className=\"nowrap\">\n                <Link to={`/list?category=${category}`}>\n                  <span onClick={clickHandler} className=\"category\">{category}</span>\n                </Link>\n              </span>\n              <span className=\"nowrap\">{distanceTipText && <span className=\"distance\">現在位置から {distanceTipText}</span> }</span>\n            </div>\n\n            <div style={{margin: \"24px 0\"}}><Links data={shop} /></div>\n\n            { shop['画像'] && <img src={shop['画像']} alt={shop['スポット名']} style={{width: \"100%\"}} />}\n\n            <p style={{margin: \"24px 0\", wordBreak: \"break-all\"}}>{toBreakLine(content)}</p>\n\n            <div\n              ref={mapNode}\n              style={{width: '100%', height: '200px', marginTop: \"24px\"}}\n              data-lat={shop['緯度']}\n              data-lng={shop['経度']}\n              data-navigation-control=\"off\"\n            ></div>\n          </>\n          :\n          <></>\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default Content;\n","import React from \"react\";\n// @ts-ignore\nimport geojsonExtent from '@mapbox/geojson-extent'\nimport toGeoJson from './toGeoJson'\nimport setCluster from './setCluster'\nimport Shop from './Shop'\nimport Header from './Header'\n\ntype Props = {\n  data: Pwamap.ShopData[];\n};\n\nconst CSS: React.CSSProperties = {\n  width: '100%',\n  height: '100%',\n  position: 'relative',\n}\n\nconst hidePoiLayers = (map: any) => {\n\n  const hideLayers = [\n    'poi',\n    'poi-primary',\n    'poi-r0-r9',\n    'poi-r10-r24',\n    'poi-r25',\n    'poi-bus',\n    'poi-entrance',\n  ]\n\n  for (let i = 0; i < hideLayers.length; i++) {\n    const layerId = hideLayers[i];\n    map.setLayoutProperty(layerId, 'visibility', 'none')\n  }\n}\n\nconst parseHash = (url?: Location | URL) => {\n  const qstr = (url || window.location).hash.substring(2);\n  const q = new URLSearchParams(qstr);\n  return q;\n};\n\nconst updateHash = (q: URLSearchParams) => {\n\n  const hash = q.toString();\n  if (hash) {\n    window.location.hash = `#/?${q.toString().replace(/%2F/g, '/')}`;\n  }\n};\n\nconst Content = (props: Props) => {\n  const mapNode = React.useRef<HTMLDivElement>(null);\n  const [mapObject, setMapObject] = React.useState<any>()\n  const [shop, setShop] = React.useState<Pwamap.ShopData | undefined>(undefined)\n  const [ zLatLngString, setZLatLngString ] = React.useState<string>('');\n\n  const addMarkers = (mapObject: any, data: any) => {\n\n    if (!mapObject || !data) {\n      return\n    }\n\n    mapObject.on('render', () => {\n\n      // nothing to do if shops exists.\n      if (mapObject.getSource('shops')) {\n        return\n      }\n\n      hidePoiLayers(mapObject)\n\n      const textColor = '#000000'\n      const textHaloColor = '#FFFFFF'\n\n      const geojson = toGeoJson(data)\n\n      mapObject.addSource('shops', {\n        type: 'geojson',\n        data: geojson,\n        cluster: true,\n        clusterMaxZoom: 14,\n        clusterRadius: 25,\n      })\n\n      mapObject.addLayer({\n        id: 'shop-points',\n        type: 'circle',\n        source: 'shops',\n        filter: ['all',\n          ['==', '$type', 'Point'],\n        ],\n        paint: {\n          'circle-radius': 13,\n          'circle-color': '#FF0000',\n          'circle-opacity': 0.4,\n          'circle-stroke-width': 2,\n          'circle-stroke-color': '#FFFFFF',\n          'circle-stroke-opacity': 1,\n        },\n      })\n\n      mapObject.addLayer({\n        id: 'shop-symbol',\n        type: 'symbol',\n        source: 'shops',\n        filter: ['all',\n          ['==', '$type', 'Point'],\n        ],\n        paint: {\n          'text-color': textColor,\n          'text-halo-color': textHaloColor,\n          'text-halo-width': 2,\n        },\n        layout: {\n          'text-field': \"{スポット名}\",\n          'text-font': ['Noto Sans Regular'],\n          'text-variable-anchor': ['top', 'bottom', 'left', 'right'],\n          'text-radial-offset': 0.5,\n          'text-justify': 'auto',\n          'text-size': 12,\n          'text-anchor': 'top',\n          'text-max-width': 12,\n          'text-allow-overlap': false,\n        },\n      })\n\n      mapObject.on('mouseenter', 'shop-points', () => {\n        mapObject.getCanvas().style.cursor = 'pointer'\n      })\n\n      mapObject.on('mouseleave', 'shop-points', () => {\n        mapObject.getCanvas().style.cursor = ''\n      })\n\n      mapObject.on('mouseenter', 'shop-symbol', () => {\n        mapObject.getCanvas().style.cursor = 'pointer'\n      })\n\n      mapObject.on('mouseleave', 'shop-symbol', () => {\n        mapObject.getCanvas().style.cursor = ''\n      })\n\n      mapObject.on('click', 'shop-points', (event: any) => {\n        if (!event.features[0].properties.cluster) {\n          setShop(event.features[0].properties)\n        }\n      })\n\n      mapObject.on('click', 'shop-symbol', (event: any) => {\n        if (!event.features[0].properties.cluster) {\n          setShop(event.features[0].properties)\n        }\n      })\n\n      setCluster(mapObject)\n\n\n    });\n\n  }\n\n  React.useEffect(() => {\n\n    addMarkers(mapObject, props.data)\n\n  }, [mapObject, props.data])\n\n  React.useEffect(() => {\n    const hash = parseHash();\n    if (zLatLngString) {\n      hash.set('map', zLatLngString);\n    }\n    updateHash(hash);\n\n  }, [ zLatLngString ]);\n\n  React.useEffect(() => {\n    // Only once reder the map.\n    if (!mapNode.current || mapObject) {\n      return\n    }\n\n    // @ts-ignore\n    const { geolonia } = window;\n\n    const geojson = toGeoJson(props.data)\n    const bounds = geojsonExtent(geojson)\n\n    const map = new geolonia.Map({\n      container: mapNode.current,\n      style: 'geolonia/gsi',\n      bounds: bounds,\n      fitBoundsOptions: { padding: 50 },\n    });\n\n    const hash = parseHash();\n    if (hash && hash.get('map')) {\n\n      const latLngString = hash.get('map') || '';\n      const zlatlng = latLngString.split('/');\n\n      const zoom = zlatlng[0]\n      const lat = zlatlng[1]\n      const lng = zlatlng[2]\n\n      map.flyTo({center: [lng, lat], zoom});\n\n    } else if (bounds) {\n\n      map.fitBounds(bounds, { padding: 50 })\n\n    }\n\n    const onMapLoad = () => {\n      hidePoiLayers(map)\n      setMapObject(map)\n\n      map.on('moveend', () => {\n        // see: https://github.com/maplibre/maplibre-gl-js/blob/ba7bfbc846910c5ae848aaeebe4bde6833fc9cdc/src/ui/hash.js#L59\n        const center = map.getCenter(),\n          rawZoom = map.getZoom(),\n          zoom = Math.round(rawZoom * 100) / 100,\n          // derived from equation: 512px * 2^z / 360 / 10^d < 0.5px\n          precision = Math.ceil((zoom * Math.LN2 + Math.log(512 / 360 / 0.5)) / Math.LN10),\n          m = Math.pow(10, precision),\n          lng = Math.round(center.lng * m) / m,\n          lat = Math.round(center.lat * m) / m,\n          zStr = Math.ceil(zoom);\n\n        setZLatLngString(`${zStr}/${lat}/${lng}`);\n      });\n    }\n\n    const orienteationchangeHandler = () => {\n      map.resize()\n    }\n\n    // attach\n    map.on('load', onMapLoad)\n\n    window.addEventListener('orientationchange', orienteationchangeHandler)\n\n    return () => {\n      // detach to prevent memory leak\n      window.removeEventListener('orientationchange', orienteationchangeHandler)\n      map.off('load', onMapLoad)\n    }\n  }, [mapNode, mapObject, props.data])\n\n  const closeHandler = () => {\n    setShop(undefined)\n  }\n\n  return (\n    <div style={CSS}>\n      <Header />\n\n      <div\n        ref={mapNode}\n        style={CSS}\n        data-geolocate-control=\"on\"\n        data-marker=\"off\"\n        data-gesture-handling=\"off\"\n      ></div>\n      {shop ?\n        <Shop shop={shop} close={closeHandler} />\n        :\n        <></>\n      }\n    </div>\n  );\n};\n\nexport default Content;\n","import Map from \"./Map\"\n\ntype Props = {\n  data: Pwamap.ShopData[];\n}\n\nconst Content = (props: Props) => {\n  return (\n    <><Map data={props.data} /></>\n  );\n};\n\nexport default Content;\n","import { BsChevronCompactRight } from 'react-icons/bs'\nimport './ShopListItem.scss'\nimport { Link } from \"react-router-dom\";\nimport { makeDistanceLabelText } from \"./distance-label\";\n\ntype Props = {\n  data: Pwamap.ShopData;\n  popupHandler: Function\n};\n\nconst Content = (props: Props) => {\n  const clickHandler = () => {\n    props.popupHandler(props.data)\n  }\n\n  const distanceTipText = makeDistanceLabelText(props.data.distance)\n  const category = props.data['カテゴリ']\n  const image = props.data['画像']\n\n\n  return (\n    <>\n      <div className=\"shop-link\">\n        <h2 className=\"shop-title\" style={{ wordBreak: \"break-all\" }} onClick={clickHandler}>{props.data['スポット名']}</h2>\n        <div className='tag-box'>\n\n            <span className=\"nowrap\">\n              <Link to={`/list?category=${category}`}>\n                <span className=\"category\">{category}</span>\n              </Link>\n            </span>\n\n          <span className=\"nowrap\">{distanceTipText && <span className=\"distance\">現在位置から {distanceTipText}</span>}</span>\n        </div>\n\n        <div style={{ margin: \"10px 10px 10px 0\" }}>\n\n          { image && <img src={image} alt={props.data['スポット名']} onClick={clickHandler}/>}\n\n        </div>\n\n        <div className=\"right\" onClick={clickHandler}><BsChevronCompactRight size=\"40px\" color=\"#CCCCCC\" /></div>\n      </div>\n    </>\n  );\n};\n\nexport default Content;\n","import React from \"react\";\nimport ShopListItem from './ShopListItem'\nimport Shop from './Shop'\nimport './List.scss'\nimport { useSearchParams } from \"react-router-dom\";\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { askGeolocationPermission } from '../geolocation'\nimport * as turf from \"@turf/turf\"\nimport Select from 'react-select'\nimport { useNavigate } from 'react-router-dom';\nimport Header from './Header'\n\ntype Props = {\n  data: Pwamap.ShopData[];\n}\n\nconst sortShopList = async (shopList: Pwamap.ShopData[]) => {\n  const currentPosition = await askGeolocationPermission()\n  if(currentPosition) {\n    const from = turf.point(currentPosition);\n    const sortingShopList = shopList.map((shop) => {\n      const lng = parseFloat(shop['経度'])\n      const lat = parseFloat(shop['緯度'])\n      if(Number.isNaN(lng) || Number.isNaN(lat)) {\n        return shop\n      } else {\n        const to = turf.point([lng, lat])\n        const distance = turf.distance(from, to, {units: 'meters' as 'meters'});\n        return { ...shop, distance }\n      }\n    })\n    sortingShopList.sort((a,b) => {\n      if(typeof a.distance !== 'number' || Number.isNaN(a.distance)) {\n        return 1\n      } else if (typeof b.distance !== 'number' || Number.isNaN(b.distance)) {\n        return -1\n      } else {\n        return a.distance - b.distance\n      }\n    })\n    return sortingShopList\n  } else {\n    return shopList\n  }\n}\n\nconst Content = (props: Props) => {\n  const navigate = useNavigate();\n\n  const [shop, setShop] = React.useState<Pwamap.ShopData | undefined>()\n  const [data, setData] = React.useState<Pwamap.ShopData[]>(props.data)\n  const [list, setList] = React.useState<any[]>([]);\n  const [page, setPage] = React.useState(10);\n  const [hasMore, setHasMore] = React.useState(true);\n  const [categoryList, setCategoryList] = React.useState<string[]>([]);\n\n\n  const [searchParams] = useSearchParams();\n  const queryCategory = searchParams.get('category')\n\n  React.useEffect(() => {\n\n    let categories: string[] = []\n\n    for (let i = 0;i < props.data.length;i++) {\n      const shop = props.data[i]\n\n      if (categories.indexOf(shop['カテゴリ']) === -1) {\n\n        categories.push(shop['カテゴリ'])\n      }\n\n    }\n\n    setCategoryList(categories)\n\n\n    let data = props.data;\n\n    if (queryCategory) {\n      data = props.data.filter((shop) => {\n        return shop['カテゴリ'] === queryCategory\n      })\n    }\n\n    let isMounted = true\n    // prevent memory leak\n    if (isMounted) {\n\n      const orderBy = process.env.REACT_APP_ORDERBY\n\n      if (orderBy === 'distance') {\n\n        sortShopList(data)\n          .then(sortedData => {\n            // prevent memory leak\n            if (isMounted) {\n              setList(sortedData.slice(0, page))\n              setData(sortedData)\n            }\n          })\n\n      } else {\n        setList(data.slice(0, page))\n        setData(data)\n      }\n    }\n\n    return () => {\n      isMounted = false\n    }\n  }, [props.data, queryCategory, page])\n\n\n  const popupHandler = (shop: Pwamap.ShopData) => {\n    if (shop) {\n      setShop(shop)\n    }\n  }\n\n  const closeHandler = () => {\n    setShop(undefined)\n  }\n\n    //項目を読み込むときのコールバック\n    const loadMore = () => {\n\n      //データ件数が0件の場合、処理終了\n      if (list.length >= data.length) {\n        setHasMore(false);\n        return;\n      }\n\n      setList([...list, ...data.slice(page, page + 10)])\n      setPage(page + 10)\n    }\n\n  const loader = <div\n    className=\"loader\"\n    key={0}\n    style={{\n      width: '100%',\n      height: '200px',\n      textAlign: 'center',\n      position: 'relative',\n      top: '100px'\n    }}\n  >場所一覧を読み込み中です...</div>;\n\n  return (\n    <div id=\"shop-list\" className=\"shop-list\">\n      <Header />\n      <div className=\"category-item\">\n        <div className=\"category-container\">\n          <label htmlFor=\"category-select\">カテゴリから選ぶ</label>\n          <Select\n            onChange={(e) => {\n              if (e) {\n                navigate(`/list?category=${e.value}`)\n              }\n            }}\n            options={\n              categoryList.map(category => {\n                return {\n                  value: category,\n                  label: category\n                }\n              })\n            }\n          />\n        </div>\n      </div>\n      <InfiniteScroll\n        dataLength={list.length}\n        next={loadMore}\n        hasMore={hasMore}\n        loader={loader}\n        scrollableTarget=\"shop-list\"\n      >\n        {\n          list.map((item, index) => {\n            return (<div key={index} className=\"shop\">\n              <ShopListItem\n                data={item}\n                popupHandler={popupHandler}\n              />\n            </div>)\n\n          })\n        }\n      </InfiniteScroll>\n      {shop ?\n        <Shop shop={shop} close={closeHandler} />\n        :\n        <></>\n      }\n    </div>\n  );\n};\n\nexport default Content;\n","export const askGeolocationPermission = () => {\n  return new Promise<Pwamap.LngLat | null>((resolve, reject) => {\n\n    if(!window.navigator.geolocation || !window.navigator.geolocation.getCurrentPosition) {\n      resolve(null)\n    }\n\n    window.navigator.geolocation.getCurrentPosition(\n      (pos) => {\n        const lat = pos.coords.latitude\n        const lng = pos.coords.longitude\n        resolve([lng, lat])\n      },\n      (error) => {\n        resolve(null)\n      },\n      {\n        enableHighAccuracy: true,\n        timeout: 5000,\n        maximumAge: 0\n      }\n    )\n  })\n}\n","import { Link } from \"react-router-dom\";\nimport './Tabbar.scss'\n\nimport { FaList, FaHome, FaComments } from \"react-icons/fa\"\n\nconst Content = () => {\n  return (\n    <div className=\"tabbar\">\n      <ul>\n        <li><Link to=\"/\"><div className=\"icon\"><FaHome /></div><div className=\"text\">ホーム</div></Link></li>\n        <li><Link to=\"/post\"><div className=\"icon\"><FaComments /></div><div className=\"text\">口コミ投稿</div></Link></li>\n        <li><Link to=\"/list\"><div className=\"icon\"><FaList /></div><div className=\"text\">一覧</div></Link></li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Content;\n","const zen2han = (str: string) => {\n  return str.replace(/[！-～]/g, function (s: string) {\n    return String.fromCharCode(s.charCodeAt(0) - 0xFEE0);\n  }).replace(/　/g, ' ');\n}\n\nexport default zen2han;\n","import zen2han from \"./zen2han\";\n\nconst table2json = (table: Array<Array<string>>) => {\n  const header = table[0]\n  const records = table.slice(1)\n\n  return records.map((record: Array<string>) => {\n\n    const properties = header.reduce((prev: any, column: any) => {\n      const value = record[header.indexOf(column)];\n      prev[column] = zen2han(value || '');\n      return prev;\n    }, {});\n    return properties;\n  });\n\n}\n\nexport default table2json;\n","import { ChangeEvent, useState } from 'react'\nimport './Form.scss'\nimport axios from \"axios\"\nimport Header from './Header'\n\ntype Input = {\n  title: string\n  category: string\n  content: string\n  address: string\n  postcode: string\n  date: string\n  time: string\n}\n\ntype Zipcode = {\n  main: string\n  sub: string\n}\n\nconst Content = () => {\n  const [zipcode, setZipcodeMain] = useState<Zipcode>({\n    main: \"\",\n    sub: \"\"\n  })\n\n  const [inputs, setInputs] = useState<Input>({\n    title: '',\n    category: '',\n    content: '',\n    address: '',\n    postcode: '',\n    date: '',\n    time: ''\n  })\n\n  const [showResult, setShowResult] = useState(false)\n\n  const updateZipcodeMain = (e: ChangeEvent<HTMLInputElement>) => {\n    setZipcodeMain({ ...zipcode, main: e.target.value })\n  }\n  const updateZipcodeSub = async (e: ChangeEvent<HTMLInputElement>) => {\n    setZipcodeMain({ ...zipcode, sub: e.target.value })\n    if (e.target.value.length === 4 && zipcode.main.length === 3) {\n      try {\n        const res = await axios.get(\n          \"https://zipcloud.ibsnet.co.jp/api/search\",\n          {\n            params: {\n              zipcode: zipcode.main + e.target.value\n            }\n          }\n        )\n        if (res.data.results) {\n          const result = res.data.results[0]\n          setInputs(values => ({ ...values, 'address': result[\"address1\"] + result[\"address2\"] + result[\"address3\"] }))\n        }\n      } catch {\n        alert(\"住所の取得に失敗しました。\")\n      }\n    }\n  }\n\n  const handleChange = (e: any) => {\n    const name = e.target.name\n    const value = e.target.value\n    setInputs(values => ({ ...values, [name]: value }))\n  }\n\n  const handleSubmit = async () => {\n    setShowResult(!showResult)\n  }\n\n  return (\n    <>\n      <Header />\n\n      {\n        showResult ? <div className='result-container'><h1 className='result'>投稿しました ✅</h1></div> :\n          <div className='container'>\n            <h1>口コミ投稿</h1>\n            <div className='form-container'>\n              <label className='label'>郵便番号</label><br />\n              <div className='form-flex'>\n                <input className=\"form-input\" type=\"text\" onChange={updateZipcodeMain} value={zipcode.main} />\n                <span className='form-hyphen'> - </span>\n                <input className=\"form-input\" type=\"text\" onChange={updateZipcodeSub} value={zipcode.sub} />\n              </div>\n            </div><div className='form-container'>\n              <label className='label'>\n                住所\n              </label><br />\n              <input\n                type=\"text\"\n                name=\"address\"\n                value={inputs.address}\n                onChange={handleChange}\n                className=\"form-input\" />\n            </div><div className='form-container'>\n              <label className='label'>日付</label><br />\n              <input type=\"date\" name=\"date\" value={inputs.date}\n                onChange={handleChange}\n                className=\"form-input\" />\n            </div><div className='form-container'>\n              <label className='label'>時刻</label><br />\n              <input type=\"time\" name=\"time\" value={inputs.time}\n                onChange={handleChange}\n                className=\"form-input\" />\n            </div><div className='form-container'>\n              <label className='label'>\n                カテゴリ\n              </label><br />\n              <input\n                type=\"text\"\n                name=\"category\"\n                value={inputs.category}\n                onChange={handleChange}\n                className=\"form-input\" />\n            </div><div className='form-container'>\n              <label className='label'>\n                内容\n              </label><br />\n              <textarea\n                name=\"content\"\n                value={inputs.content}\n                onChange={handleChange}\n                className=\"form-input-textarea\" />\n            </div><button className='submit' onClick={handleSubmit}>送信</button>\n          </div>}\n    </>\n  )\n}\n\nexport default Content\n","import './Post.scss'\nimport Form from './Form'\n\nconst Content = () => {\n\n\n  return (\n    <>\n      <Form />\n    </>\n  )\n}\n\nexport default Content\n","import React from \"react\"\nimport { Routes, Route } from \"react-router-dom\";\nimport \"./App.scss\";\n\nimport Home from './App/Home'\nimport List from './App/List'\nimport Tabbar from './App/Tabbar'\nimport table2json from \"./lib/table2json\";\nimport Post from './App/Post'\n\nconst sortShopList = async (shopList: Pwamap.ShopData[]) => {\n\n  // 新着順にソート\n  return shopList.sort(function (item1, item2) {\n    return Date.parse(item2['タイムスタンプ']) - Date.parse(item1['タイムスタンプ'])\n  });\n\n}\n\nconst App = () => {\n  const [shopList, setShopList] = React.useState<Pwamap.ShopData[]>([])\n\n  React.useEffect(() => {\n    fetch(`${process.env.PUBLIC_URL}/data.json?timestamp=${new Date().getTime()}`)\n      .then((response) => {\n        return response.ok ? response.text() : Promise.reject(response.status);\n      })\n      .then((fetchedData) => {\n\n        const data = JSON.parse(fetchedData)\n\n        if ('values' in data === false) {\n          console.log(\"No Data Found at Spreadsheet\")\n          setShopList([])\n          return\n        }\n\n        let features = table2json(data.values);\n\n        const nextShopList: Pwamap.ShopData[] = []\n        for (let i = 0; i < features.length; i++) {\n          const feature = features[i] as Pwamap.ShopData\n\n          if (!feature['緯度'] || !feature['経度'] || !feature['スポット名']) {\n            continue;\n          }\n          if (!feature['緯度'].match(/^-?[0-9]+(\\.[0-9]+)?$/)) {\n            continue\n          }\n          if (!feature['経度'].match(/^-?[0-9]+(\\.[0-9]+)?$/)) {\n            continue\n          }\n\n          const shop = {\n            ...feature,\n            index: i\n          }\n\n          nextShopList.push(shop)\n        }\n\n        sortShopList(nextShopList).then((sortedShopList) => {\n          setShopList(sortedShopList)\n        })\n\n      });\n  }, [])\n\n  return (\n    <div className=\"app\">\n      <div className=\"app-body\">\n        <Routes>\n          <Route path=\"/\" element={<Home data={shopList} />} />\n          <Route path=\"/post\" element={<Post />} />\n          <Route path=\"/list\" element={<List data={shopList} />} />\n        </Routes>\n      </div>\n      <div className=\"app-footer\">\n        <Tabbar />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { useQRCode } from 'next-qrcode';\n\nfunction Qrcode(props: { url: string }) {\n\n  const { url } = props;\n  const { Canvas } = useQRCode();\n\n  return (\n    <Canvas\n      text={url}\n      options={{\n        type: 'image/png',\n        margin: 0,\n        width: 128\n      }}\n    />\n  );\n}\n\nexport default Qrcode;\n","import './About.scss'\nimport Qrcode from './Qrcode'\nimport config from './config.json'\n\nconst Content = () => {\n\n  const logoUrl = config.logo_image_url || `${process.env.PUBLIC_URL}/logo.svg`\n\n  return (\n    <div className=\"about\">\n      <div className=\"branding\">\n        <img className=\"image\" src={logoUrl} alt=\"\"/>\n      </div>\n\n      <div className=\"title\">{config.title}</div>\n      <div className=\"description\">スマホで確認ができます 👇</div>\n      <div className=\"qrcode\"><Qrcode url={window.location.href} /></div>\n    </div>\n  );\n};\n\nexport default Content;\n","import App from './App'\nimport About from './About'\nimport './Container.scss'\n\nfunction Content() {\n  return (\n    <div className=\"outer-container\">\n      <div className=\"inner-container\">\n        <About />\n        <App />\n      </div>\n    </div>\n  );\n}\n\nexport default Content;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from \"react-router-dom\";\nimport Container from './Container';\nimport './index.scss'\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Container />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}